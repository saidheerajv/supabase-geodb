{"remainingRequest":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/thread-loader/dist/cjs.js!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/babel-loader/lib/index.js!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/PostLocation.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/PostLocation.vue","mtime":1633900624464},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2RoZWVyYWovRGVza3RvcC9zdXBhL3N1cGFiYXNlLWdlb2RiL3NiZ2VvZGIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICIuLi9zdXBhYmFzZSI7CmltcG9ydCB7IHN0b3JlIH0gZnJvbSAiLi4vc3RvcmUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBvc3RMb2NhdGlvbiIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5hbWU6ICIiLAogICAgICBsb2Nfc3RyaW5nOiAiIiwKICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICBzdWNjZXNzQWxlcnQ6IGZhbHNlLAogICAgICBlcnJvckFsZXJ0OiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHBvc3RMaXN0aW5nOiBmdW5jdGlvbiBwb3N0TGlzdGluZygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvb3JkcywgZCwgaW5zZXJPYmosIF95aWVsZCRzdXBhYmFzZSRmcm9tJCwgZXJyb3I7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvb3JkcyA9IF90aGlzLmdldExhdExvbmcoX3RoaXMubG9jX3N0cmluZyk7CiAgICAgICAgICAgICAgICBkID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgIGluc2VyT2JqID0gewogICAgICAgICAgICAgICAgICBuYW1lOiBfdGhpcy5uYW1lLAogICAgICAgICAgICAgICAgICBsb2NhdGlvbjogIlNSSUQ9NDMyNjtQT0lOVCgiICsgY29vcmRzLmxhdCArICIgIiArIGNvb3Jkcy5sb25nICsgIikiLAogICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogX3RoaXMuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgIHRhZ3M6ICJ4eXogYWJjIiwKICAgICAgICAgICAgICAgICAgY29vcmRzOiBKU09OLnN0cmluZ2lmeShjb29yZHMpLAogICAgICAgICAgICAgICAgICBjcmVhdGVkX2F0OiBkLAogICAgICAgICAgICAgICAgICB1cGRhdGVkX2F0OiBkLAogICAgICAgICAgICAgICAgICBhZGRlZF9ieTogc3RvcmUudXNlci5pZAogICAgICAgICAgICAgICAgfTsgLy8gY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgICAgICAgICAgX3RoaXMuc3VjY2Vzc0FsZXJ0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBzdXBhYmFzZS5mcm9tKCJhbGxfbG9jYXRpb25zIikuaW5zZXJ0KFtpbnNlck9ial0pLnNpbmdsZSgpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBfeWllbGQkc3VwYWJhc2UkZnJvbSQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZXJyb3IgPSBfeWllbGQkc3VwYWJhc2UkZnJvbSQuZXJyb3I7CgogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSwgZXJyb3IpOwogICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLmVycm9yQWxlcnQgPSB0cnVlOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuc3VjY2Vzc0FsZXJ0ID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldExhdExvbmc6IGZ1bmN0aW9uIGdldExhdExvbmcoc3RyKSB7CiAgICAgIHZhciBwYXR0MSA9IC9bKy1dP1xkKyhcLlxkKyk/L2c7CiAgICAgIHZhciByZXN1bHQgPSBzdHIubWF0Y2gocGF0dDEpOwogICAgICByZXN1bHQgPSByZXN1bHQuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0ubGVuZ3RoID4gNCAmJiBpdGVtLmluY2x1ZGVzKCIuIik7CiAgICAgIH0pOwogICAgICByZXR1cm4gewogICAgICAgIGxhdDogcmVzdWx0WzBdLAogICAgICAgIGxvbmc6IHJlc3VsdFsxXQogICAgICB9OwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/PostLocation.vue"],"names":[],"mappings":";;;;;;;;;;AAkCA,SAAS,QAAT,QAAyB,aAAzB;AACA,SAAS,KAAT,QAAsB,UAAtB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,cADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,IAAI,EAAE,EADD;AAEL,MAAA,UAAU,EAAE,EAFP;AAGL,MAAA,WAAW,EAAE,EAHR;AAIL,MAAA,YAAW,EAAI,KAJV;AAKL,MAAA,UAAS,EAAI;AALR,KAAP;AAOD,GAVY;AAWb,EAAA,OAAO,EAAE;AAED,IAAA,WAFC,yBAEa;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEd,gBAAA,MAFc,GAEL,KAAI,CAAC,UAAL,CAAgB,KAAI,CAAC,UAArB,CAFK;AAGd,gBAAA,CAHc,GAGV,IAAI,IAAJ,EAHU;AAKd,gBAAA,QALc,GAKH;AACb,kBAAA,IAAI,EAAE,KAAI,CAAC,IADE;AAEb,kBAAA,QAAQ,EAAE,qBAAqB,MAAM,CAAC,GAA5B,GAAkC,GAAlC,GAAwC,MAAM,CAAC,IAA/C,GAAsD,GAFnD;AAGb,kBAAA,WAAW,EAAE,KAAI,CAAC,WAHL;AAIb,kBAAA,IAAI,EAAE,SAJO;AAKb,kBAAA,MAAM,EAAE,IAAI,CAAC,SAAL,CAAe,MAAf,CALK;AAMb,kBAAA,UAAS,EAAI,CANA;AAOb,kBAAA,UAAS,EAAI,CAPA;AAQb,kBAAA,QAAO,EAAI,KAAK,CAAC,IAAN,CAAW;AART,iBALG,EAgBlB;;AACA,gBAAA,KAAI,CAAC,YAAL,GAAoB,KAApB;AAjBkB;AAAA,uBAmBM,QAAO,CAC5B,IADqB,CAChB,eADgB,EAErB,MAFqB,CAEd,CAAC,QAAD,CAFc,EAGrB,MAHqB,EAnBN;;AAAA;AAAA;AAmBV,gBAAA,KAnBU,yBAmBV,KAnBU;;AAwBlB;AACA,oBAAG,KAAH,EAAU;AACR,kBAAA,KAAI,CAAC,UAAL,GAAkB,IAAlB;AACF,iBAFA,MAEO;AACL,kBAAA,KAAI,CAAC,YAAL,GAAoB,IAApB;AACF;;AA7BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BnB,KAjCM;AAmCP,IAAA,UAnCO,sBAmCI,GAnCJ,EAmCS;AAEd,UAAI,KAAI,GAAI,mBAAZ;AACA,UAAI,MAAK,GAAI,GAAG,CAAC,KAAJ,CAAU,KAAV,CAAb;AACA,MAAA,MAAK,GAAI,MAAM,CAAC,MAAP,CAAc,UAAC,IAAD,EAAU;AAC/B,eAAO,IAAI,CAAC,MAAL,GAAc,CAAd,IAAmB,IAAI,CAAC,QAAL,CAAc,GAAd,CAA1B;AACD,OAFQ,CAAT;AAIA,aAAO;AAAE,QAAA,GAAG,EAAE,MAAM,CAAC,CAAD,CAAb;AAAkB,QAAA,IAAI,EAAE,MAAM,CAAC,CAAD;AAA9B,OAAP;AACD;AA5CM;AAXI,CAAf","sourcesContent":["<template>\n<p class=\"alert alert-success\" v-if=\"successAlert\">\n  Added Listing successfully !\n</p>\n<p class=\"alert alert-warning\" v-if=\"errorAlert\">\n  Error Adding Listing ! Please try again. \n</p>\n  <div class=\"\">\n    <h3 class=\"text-dark mb-3\">Post Listing</h3>\n\n    <input class=\"form-control my-2\" v-model=\"name\" placeholder=\"Enter name\" />\n\n    <input\n      class=\"form-control my-2\"\n      v-model=\"loc_string\"\n      placeholder=\"Paste google maps url\"\n    />\n\n    <textarea\n      class=\"form-control my-2\"\n      v-model=\"description\"\n      placeholder=\"Description\"\n    >\n    </textarea>\n\n    <div class=\"text-end\">\n      <button class=\"btn action-btn m-2 float-right\" @click=\"postListing\">\n        Add Listing\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { supabase } from \"../supabase\";\nimport { store } from \"../store\";\n\nexport default {\n  name: \"PostLocation\",\n  data() {\n    return {\n      name: \"\",\n      loc_string: \"\",\n      description: \"\",\n      successAlert : false, \n      errorAlert : false\n    };\n  },\n  methods: {\n    \n    async postListing() {\n\n      let coords = this.getLatLong(this.loc_string);\n      let d = new Date();\n\n      let inserObj = {\n        name: this.name,\n        location: \"SRID=4326;POINT(\" + coords.lat + \" \" + coords.long + \")\",\n        description: this.description,\n        tags: \"xyz abc\",\n        coords: JSON.stringify(coords),\n        created_at : d,\n        updated_at : d,\n        added_by : store.user.id\n      };\n\n      // console.log(data);\n      this.successAlert = false;\n\n      const { error } = await supabase\n        .from(\"all_locations\")\n        .insert([inserObj])\n        .single();\n\n      // console.log(data, error);\n      if(error) {\n        this.errorAlert = true;\n      } else {\n        this.successAlert = true;\n      }\n\n    },\n\n    getLatLong(str) {\n      \n      var patt1 = /[+-]?\\d+(\\.\\d+)?/g;\n      var result = str.match(patt1);\n      result = result.filter((item) => {\n        return item.length > 4 && item.includes(\".\");\n      });\n\n      return { lat: result[0], long: result[1] };\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n.action-btn {\n  background-color: rgb(36, 180, 126);\n  color : #fff;\n}\n\n</style>\n"],"sourceRoot":""}]}
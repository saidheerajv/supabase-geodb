{"remainingRequest":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/babel-loader/lib/index.js!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/Auth.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/Auth.vue","mtime":1633900591585},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2RoZWVyYWovRGVza3RvcC9zdXBhL3N1cGFiYXNlLWdlb2RiL3NiZ2VvZGIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCB7IHJlZiB9IGZyb20gInZ1ZSI7CmltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAiLi4vc3VwYWJhc2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7fTsKICB9LAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cCgpIHsKICAgIHZhciBsb2FkaW5nID0gcmVmKGZhbHNlKTsKICAgIHZhciBlbWFpbCA9IHJlZigiIik7CiAgICB2YXIgZW1haWxTZW50ID0gcmVmKGZhbHNlKTsKCiAgICB2YXIgaGFuZGxlTG9naW4gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgX3lpZWxkJHN1cGFiYXNlJGF1dGgkLCBlcnJvcjsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBsb2FkaW5nLnZhbHVlID0gdHJ1ZTsKICAgICAgICAgICAgICAgIGVtYWlsU2VudC52YWx1ZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gc3VwYWJhc2UuYXV0aC5zaWduSW4oewogICAgICAgICAgICAgICAgICBlbWFpbDogZW1haWwudmFsdWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfeWllbGQkc3VwYWJhc2UkYXV0aCQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZXJyb3IgPSBfeWllbGQkc3VwYWJhc2UkYXV0aCQuZXJyb3I7CgogICAgICAgICAgICAgICAgaWYgKCFlcnJvcikgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGVtYWlsU2VudC52YWx1ZSA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBhbGVydChfY29udGV4dC50MC5lcnJvcl9kZXNjcmlwdGlvbiB8fCBfY29udGV4dC50MC5tZXNzYWdlKTsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNTsKICAgICAgICAgICAgICAgIGxvYWRpbmcudmFsdWUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5maW5pc2goMTUpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCAxMiwgMTUsIDE4XV0pOwogICAgICB9KSk7CgogICAgICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlTG9naW4oKSB7CiAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfTsKICAgIH0oKTsKCiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBsb2FkaW5nLAogICAgICBlbWFpbDogZW1haWwsCiAgICAgIGhhbmRsZUxvZ2luOiBoYW5kbGVMb2dpbiwKICAgICAgZW1haWxTZW50OiBlbWFpbFNlbnQKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/Auth.vue"],"names":[],"mappings":";;AAgCA,SAAS,GAAT,QAAoB,KAApB;AACA,SAAS,QAAT,QAAyB,aAAzB;AAGA,eAAe;AAEX,EAAA,IAFW,kBAEJ;AACP,WAAO,EAAP;AAGD,GANY;AAOb,EAAA,KAPa,mBAOL;AACN,QAAM,OAAM,GAAI,GAAG,CAAC,KAAD,CAAnB;AACA,QAAM,KAAI,GAAI,GAAG,CAAC,EAAD,CAAjB;AACA,QAAM,SAAQ,GAAI,GAAG,CAAC,KAAD,CAArB;;AAEA,QAAM,WAAU;AAAA,yEAAI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB,gBAAA,OAAO,CAAC,KAAR,GAAgB,IAAhB;AACA,gBAAA,SAAS,CAAC,KAAV,GAAkB,KAAlB;AAHgB;AAAA,uBAIQ,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;AAAE,kBAAA,KAAK,EAAE,KAAK,CAAC;AAAf,iBAArB,CAJR;;AAAA;AAAA;AAIR,gBAAA,KAJQ,yBAIR,KAJQ;;AAAA,qBAKZ,KALY;AAAA;AAAA;AAAA;;AAAA,sBAKC,KALD;;AAAA;AAMhB,gBAAA,SAAS,CAAC,KAAV,GAAkB,IAAlB;AANgB;AAAA;;AAAA;AAAA;AAAA;AAUhB,gBAAA,KAAK,CAAC,YAAM,iBAAN,IAA2B,YAAM,OAAlC,CAAL;;AAVgB;AAAA;AAYhB,gBAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AAZgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA,sBAAV,WAAU;AAAA;AAAA;AAAA,OAAhB;;AAgBA,WAAO;AACL,MAAA,OAAO,EAAP,OADK;AAEL,MAAA,KAAK,EAAL,KAFK;AAGL,MAAA,WAAW,EAAX,WAHK;AAIL,MAAA,SAAQ,EAAR;AAJK,KAAP;AAMD;AAlCY,CAAf","sourcesContent":["<template>\n  <form\n    class=\"d-flex justify-content-center mt-5 mx-3\"\n    @submit.prevent=\"handleLogin\"\n  >\n    <div class=\"mt-4\">\n      <h3 class=\"header text-dark\">Sign in to Add/Manage your listing</h3>\n      <p class=\"description text-secondary\">Sign in via magic link with your email below</p>\n      <p class=\"alert alert-success\" v-if=\"emailSent\"> \n        Magic link sent to your email successfully! <br>\n      Please check your email to login </p>\n      <div>\n        <input\n          class=\"form-control my-2\"\n          type=\"email\"\n          placeholder=\"Your email\"\n          v-model=\"email\"\n        />\n      </div>\n      <div>\n        <input\n          type=\"submit\"\n          class=\"btn action-btn float-end my-2\"\n          :value=\"loading ? 'Loading' : 'Send Magic link'\"\n          :disabled=\"loading\"\n        />\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { supabase } from \"../supabase\";\n\n\nexport default {\n\n    data() {\n    return {\n    \n    };\n  },\n  setup() {\n    const loading = ref(false);\n    const email = ref(\"\");\n    const emailSent = ref(false);\n\n    const handleLogin = async () => {\n      try {\n        loading.value = true;\n        emailSent.value = false;\n        const { error } = await supabase.auth.signIn({ email: email.value });\n        if (error) throw error;\n        emailSent.value = true;  \n        \n\n      } catch (error) {\n        alert(error.error_description || error.message);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    return {\n      loading,\n      email,\n      handleLogin,\n      emailSent\n    };\n  },\n};\n</script>\n\n<style scoped>\n.action-btn {\n  background-color: rgb(36, 180, 126);\n  color : #fff;\n}\n\n</style>"],"sourceRoot":""}]}
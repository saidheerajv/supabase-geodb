{"remainingRequest":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/babel-loader/lib/index.js!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/PostLocation.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/PostLocation.vue","mtime":1633470851574},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2RoZWVyYWovRGVza3RvcC9zdXBhL3N1cGFiYXNlLWdlb2RiL3NiZ2VvZGIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICIuLi9zdXBhYmFzZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUG9zdExvY2F0aW9uIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogIiIsCiAgICAgIGxvY19zdHJpbmc6ICIiLAogICAgICBkZXNjcmlwdGlvbjogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBwb3N0TG9jYXRpb246IGZ1bmN0aW9uIHBvc3RMb2NhdGlvbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvb3JkcywgaW5zZXJPYmosIF95aWVsZCRzdXBhYmFzZSRmcm9tJCwgZGF0YSwgZXJyb3I7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLm5hbWUpOwogICAgICAgICAgICAgICAgY29vcmRzID0gX3RoaXMuZ2V0TGF0TG9uZyhfdGhpcy5sb2Nfc3RyaW5nKTsgLy8gbGV0IGQgPSBuZXcgRGF0ZSgpOwoKICAgICAgICAgICAgICAgIGluc2VyT2JqID0gewogICAgICAgICAgICAgICAgICBuYW1lOiBfdGhpcy5uYW1lLAogICAgICAgICAgICAgICAgICBsb2NhdGlvbjogIlNSSUQ9NDMyNjtQT0lOVCgiICsgY29vcmRzLmxhdCArICIgIiArIGNvb3Jkcy5sb25nICsgIikiLAogICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogX3RoaXMuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgIHRhZ3M6ICJ4eXogYWJjIiwKICAgICAgICAgICAgICAgICAgY29vcmRzOiBKU09OLnN0cmluZ2lmeShjb29yZHMpIC8vIGNyZWF0ZWRfYXQgOiBkLmdldFRpbWUoKQoKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHN1cGFiYXNlLmZyb20oImFsbF9sb2NhdGlvbnMiKS5pbnNlcnQoW2luc2VyT2JqXSkuc2luZ2xlKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF95aWVsZCRzdXBhYmFzZSRmcm9tJCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJHN1cGFiYXNlJGZyb20kLmRhdGE7CiAgICAgICAgICAgICAgICBlcnJvciA9IF95aWVsZCRzdXBhYmFzZSRmcm9tJC5lcnJvcjsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEsIGVycm9yKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRMYXRMb25nOiBmdW5jdGlvbiBnZXRMYXRMb25nKHN0cikgewogICAgICB2YXIgcGF0dDEgPSAvWystXT9cZCsoXC5cZCspPy9nOwogICAgICB2YXIgcmVzdWx0ID0gc3RyLm1hdGNoKHBhdHQxKTsKICAgICAgcmVzdWx0ID0gcmVzdWx0LmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmxlbmd0aCA+IDQgJiYgaXRlbS5pbmNsdWRlcygiLiIpOwogICAgICB9KTsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYXQ6IHJlc3VsdFswXSwKICAgICAgICBsb25nOiByZXN1bHRbMV0KICAgICAgfTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/dheeraj/Desktop/supa/supabase-geodb/sbgeodb/src/components/PostLocation.vue"],"names":[],"mappings":";;;;;;;;;;AA4BA,SAAS,QAAT,QAAyB,aAAzB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,cADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,IAAI,EAAE,EADD;AAEL,MAAA,UAAU,EAAE,EAFP;AAGL,MAAA,WAAW,EAAE;AAHR,KAAP;AAKD,GARY;AASb,EAAA,OAAO,EAAE;AACD,IAAA,YADC,0BACc;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnB,gBAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,IAAjB;AAEI,gBAAA,MAHe,GAGN,KAAI,CAAC,UAAL,CAAgB,KAAI,CAAC,UAArB,CAHM,EAInB;;AAEI,gBAAA,QANe,GAMJ;AACb,kBAAA,IAAI,EAAE,KAAI,CAAC,IADE;AAEb,kBAAA,QAAQ,EAAE,qBAAqB,MAAM,CAAC,GAA5B,GAAkC,GAAlC,GAAwC,MAAM,CAAC,IAA/C,GAAsD,GAFnD;AAGb,kBAAA,WAAW,EAAE,KAAI,CAAC,WAHL;AAIb,kBAAA,IAAI,EAAE,SAJO;AAKb,kBAAA,MAAM,EAAE,IAAI,CAAC,SAAL,CAAe,MAAf,CALK,CAMb;;AANa,iBANI;AAenB,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AAfmB;AAAA,uBAiBW,QAAO,CAClC,IAD2B,CACtB,eADsB,EAE3B,MAF2B,CAEpB,CAAC,QAAD,CAFoB,EAG3B,MAH2B,EAjBX;;AAAA;AAAA;AAiBX,gBAAA,IAjBW,yBAiBX,IAjBW;AAiBL,gBAAA,KAjBK,yBAiBL,KAjBK;AAsBnB,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAkB,KAAlB;;AAtBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBpB,KAxBM;AA0BP,IAAA,UA1BO,sBA0BI,GA1BJ,EA0BS;AACd,UAAI,KAAI,GAAI,mBAAZ;AACA,UAAI,MAAK,GAAI,GAAG,CAAC,KAAJ,CAAU,KAAV,CAAb;AACA,MAAA,MAAK,GAAI,MAAM,CAAC,MAAP,CAAc,UAAC,IAAD,EAAU;AAC/B,eAAO,IAAI,CAAC,MAAL,GAAc,CAAd,IAAmB,IAAI,CAAC,QAAL,CAAc,GAAd,CAA1B;AACD,OAFQ,CAAT;AAIA,aAAO;AAAE,QAAA,GAAG,EAAE,MAAM,CAAC,CAAD,CAAb;AAAkB,QAAA,IAAI,EAAE,MAAM,CAAC,CAAD;AAA9B,OAAP;AACD;AAlCM;AATI,CAAf","sourcesContent":["<template>\n  <div class=\"\">\n    <h2>Post Location</h2>\n\n    <input class=\"form-control my-2\" v-model=\"name\" placeholder=\"Enter name\" />\n\n    <input\n      class=\"form-control my-2\"\n      v-model=\"loc_string\"\n      placeholder=\"Paste google maps url\"\n    />\n\n    <textarea\n      class=\"form-control my-2\"\n      v-model=\"description\"\n      placeholder=\"Description\"\n    >\n    </textarea>\n\n    <div class=\"text-end\">\n      <button class=\"btn btn-primary m-2 float-right\" @click=\"postLocation\">\n        POST\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { supabase } from \"../supabase\";\nexport default {\n  name: \"PostLocation\",\n  data() {\n    return {\n      name: \"\",\n      loc_string: \"\",\n      description: \"\",\n    };\n  },\n  methods: {\n    async postLocation() {\n      console.log(this.name);\n\n      let coords = this.getLatLong(this.loc_string);\n      // let d = new Date();\n\n      let inserObj = {\n        name: this.name,\n        location: \"SRID=4326;POINT(\" + coords.lat + \" \" + coords.long + \")\",\n        description: this.description,\n        tags: \"xyz abc\",\n        coords: JSON.stringify(coords),\n        // created_at : d.getTime()\n      };\n\n      console.log(data);\n\n      const { data, error } = await supabase\n        .from(\"all_locations\")\n        .insert([inserObj])\n        .single();\n\n      console.log(data, error);\n    },\n\n    getLatLong(str) {\n      var patt1 = /[+-]?\\d+(\\.\\d+)?/g;\n      var result = str.match(patt1);\n      result = result.filter((item) => {\n        return item.length > 4 && item.includes(\".\");\n      });\n\n      return { lat: result[0], long: result[1] };\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n</style>\n"],"sourceRoot":""}]}
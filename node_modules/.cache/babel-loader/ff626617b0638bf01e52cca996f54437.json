{"remainingRequest":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/babel-loader/lib/index.js!/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/Auth.vue?vue&type=template&id=2b7575d8&scoped=true","dependencies":[{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/Auth.vue","mtime":1633903654119},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632349277000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVRleHRWTm9kZSBhcyBfY3JlYXRlVGV4dFZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCB2TW9kZWxUZXh0IGFzIF92TW9kZWxUZXh0LCB3aXRoRGlyZWN0aXZlcyBhcyBfd2l0aERpcmVjdGl2ZXMsIHdpdGhNb2RpZmllcnMgYXMgX3dpdGhNb2RpZmllcnMsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtMmI3NTc1ZDgiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAibXQtNCIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIHsKICAgIGNsYXNzOiAiaGVhZGVyIHRleHQtZGFyayIKICB9LCAiU2lnbiBpbiB0byBBZGQvTWFuYWdlIHlvdXIgbGlzdGluZyIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgICBjbGFzczogImRlc2NyaXB0aW9uIHRleHQtc2Vjb25kYXJ5IgogIH0sICJTaWduIGluIHZpYSBtYWdpYyBsaW5rIHdpdGggeW91ciBlbWFpbCBiZWxvdyIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzQgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAiYWxlcnQgYWxlcnQtc3VjY2VzcyIKfTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBNYWdpYyBsaW5rIHNlbnQgdG8geW91ciBlbWFpbCBzdWNjZXNzZnVsbHkhICIpOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIgUGxlYXNlIGNoZWNrIHlvdXIgZW1haWwgdG8gbG9naW4gIik7Cgp2YXIgX2hvaXN0ZWRfOCA9IFtfaG9pc3RlZF81LCBfaG9pc3RlZF82LCBfaG9pc3RlZF83XTsKdmFyIF9ob2lzdGVkXzkgPSBbInZhbHVlIiwgImRpc2FibGVkIl07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZm9ybSIsIHsKICAgIGNsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1jZW50ZXIgbXQtNSBteC0zIiwKICAgIG9uU3VibWl0OiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IF93aXRoTW9kaWZpZXJzKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzZXR1cC5oYW5kbGVMb2dpbiAmJiAkc2V0dXAuaGFuZGxlTG9naW4uYXBwbHkoJHNldHVwLCBhcmd1bWVudHMpOwogICAgfSwgWyJwcmV2ZW50Il0pKQogIH0sIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2hvaXN0ZWRfMiwgX2hvaXN0ZWRfMywgJHNldHVwLmVtYWlsU2VudCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soInAiLCBfaG9pc3RlZF80LCBfaG9pc3RlZF84KSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFtfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCB7CiAgICBjbGFzczogImZvcm0tY29udHJvbCBteS0yIiwKICAgIHR5cGU6ICJlbWFpbCIsCiAgICBwbGFjZWhvbGRlcjogIllvdXIgZW1haWwiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRzZXR1cC5lbWFpbCA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRzZXR1cC5lbWFpbF1dKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW5wdXQiLCB7CiAgICB0eXBlOiAic3VibWl0IiwKICAgIGNsYXNzOiAiYnRuIGFjdGlvbi1idG4gZmxvYXQtZW5kIG15LTIiLAogICAgdmFsdWU6ICRzZXR1cC5sb2FkaW5nID8gJ0xvYWRpbmcnIDogJ1NlbmQgTWFnaWMgbGluaycsCiAgICBkaXNhYmxlZDogJHNldHVwLmxvYWRpbmcKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIF9ob2lzdGVkXzkpXSldKV0sIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApOwp9"},{"version":3,"sources":["/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/Auth.vue"],"names":[],"mappings":";;;;;;;AAKS,EAAA,KAAK,EAAC;;;;sBACT,mBAAA,CAAoE,IAApE,EAAoE;AAAhE,IAAA,KAAK,EAAC;AAA0D,GAApE,EAA6B,oCAA7B,EAA+D,CAAA;AAAA;AAA/D,G;;;;sBACA,mBAAA,CAAsF,GAAtF,EAAsF;AAAnF,IAAA,KAAK,EAAC;AAA6E,GAAtF,EAAsC,8CAAtC,EAAkF,CAAA;AAAA;AAAlF,G;;;;;AACG,EAAA,KAAK,EAAC;;;+CAAuC,+C;;;sBACF,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,G;;;+CAAI,oC;;8BAAJ,U;;;uBARlD,mBAAA,CA2BO,MA3BP,EA2BO;AA1BL,IAAA,KAAK,EAAC,yCA0BD;AAzBJ,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAAA,aAAU,MAAA,CAAA,WAAA,IAAA,MAAA,CAAA,WAAA,OAAA,MAAA,YAAV;AAAA,KAAA,EAAqB,CAAA,SAAA,CAArB,CAAA;AAyBF,GA3BP,E,CAIE,mBAAA,CAsBM,KAtBN,EAAA,UAAA,EAsBM,CArBJ,UAqBI,EApBJ,UAoBI,EAnBiC,MAAA,CAAA,S,kBAArC,mBAAA,CAEqC,GAFrC,EAAA,UAAA,EAEqC,UAFrC,C,qCAmBI,EAhBJ,mBAAA,CAOM,KAPN,EAOM,IAPN,EAOM,C,gBANJ,mBAAA,CAKE,OALF,EAKE;AAJA,IAAA,KAAK,EAAC,mBAIN;AAHA,IAAA,IAAI,EAAC,OAGL;AAFA,IAAA,WAAW,EAAC,YAEZ;;aADS,MAAA,CAAA,K,GAAK,M;;AACd,GALF,E,IAAA,E;;AAAA,G,iBAIW,MAAA,CAAA,K,GAEP,CAPN,CAgBI,EARJ,mBAAA,CAOM,KAPN,EAOM,IAPN,EAOM,CANJ,mBAAA,CAKE,OALF,EAKE;AAJA,IAAA,IAAI,EAAC,QAIL;AAHA,IAAA,KAAK,EAAC,+BAGN;AAFC,IAAA,KAAK,EAAE,MAAA,CAAA,OAAA,GAAO,SAAP,GAAO,iBAEf;AADC,IAAA,QAAQ,EAAE,MAAA,CAAA;AACX,GALF,E,IAAA,E;;AAAA,I,UAAA,CAMI,CAPN,CAQI,CAtBN,C,CAJF,E;;AAAA,G","sourcesContent":["<template>\n  <form\n    class=\"d-flex justify-content-center mt-5 mx-3\"\n    @submit.prevent=\"handleLogin\"\n  >\n    <div class=\"mt-4\">\n      <h3 class=\"header text-dark\">Sign in to Add/Manage your listing</h3>\n      <p class=\"description text-secondary\">Sign in via magic link with your email below</p>\n      <p class=\"alert alert-success\" v-if=\"emailSent\"> \n        Magic link sent to your email successfully! <br>\n      Please check your email to login </p>\n      <div>\n        <input\n          class=\"form-control my-2\"\n          type=\"email\"\n          placeholder=\"Your email\"\n          v-model=\"email\"\n        />\n      </div>\n      <div>\n        <input\n          type=\"submit\"\n          class=\"btn action-btn float-end my-2\"\n          :value=\"loading ? 'Loading' : 'Send Magic link'\"\n          :disabled=\"loading\"\n        />\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { supabase } from \"../supabase\";\n\n\nexport default {\n\n    data() {\n    return {\n    \n    };\n  },\n  setup() {\n    const loading = ref(false);\n    const email = ref(\"\");\n    const emailSent = ref(false);\n\n    const handleLogin = async () => {\n      try {\n        loading.value = true;\n        emailSent.value = false;\n        const { error } = await supabase.auth.signIn({ email: email.value });\n        if (error) throw error;\n        emailSent.value = true;  \n        \n\n      } catch (error) {\n        alert(error.error_description || error.message);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    return {\n      loading,\n      email,\n      handleLogin,\n      emailSent\n    };\n  },\n};\n</script>\n\n<style scoped>\n.action-btn {\n  background-color: rgb(36, 180, 126);\n  color : #fff;\n}\n\n</style>"],"sourceRoot":""}]}
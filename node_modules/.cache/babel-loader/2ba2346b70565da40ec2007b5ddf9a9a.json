{"remainingRequest":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/babel-loader/lib/index.js!/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/Auth.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/Auth.vue","mtime":1633903654119},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2RoZWVyYWovRGVza3RvcC9uZXctc3VwYS9zdXBhYmFzZS1nZW9kYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgcmVmIH0gZnJvbSAidnVlIjsKaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICIuLi9zdXBhYmFzZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKCkgewogICAgdmFyIGxvYWRpbmcgPSByZWYoZmFsc2UpOwogICAgdmFyIGVtYWlsID0gcmVmKCIiKTsKICAgIHZhciBlbWFpbFNlbnQgPSByZWYoZmFsc2UpOwoKICAgIHZhciBoYW5kbGVMb2dpbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfeWllbGQkc3VwYWJhc2UkYXV0aCQsIGVycm9yOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIGxvYWRpbmcudmFsdWUgPSB0cnVlOwogICAgICAgICAgICAgICAgZW1haWxTZW50LnZhbHVlID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBzdXBhYmFzZS5hdXRoLnNpZ25Jbih7CiAgICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbC52YWx1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF95aWVsZCRzdXBhYmFzZSRhdXRoJCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBlcnJvciA9IF95aWVsZCRzdXBhYmFzZSRhdXRoJC5lcnJvcjsKCiAgICAgICAgICAgICAgICBpZiAoIWVycm9yKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgZW1haWxTZW50LnZhbHVlID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEyOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGFsZXJ0KF9jb250ZXh0LnQwLmVycm9yX2Rlc2NyaXB0aW9uIHx8IF9jb250ZXh0LnQwLm1lc3NhZ2UpOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE1OwogICAgICAgICAgICAgICAgbG9hZGluZy52YWx1ZSA9IGZhbHNlOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCgxNSk7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDEyLCAxNSwgMThdXSk7CiAgICAgIH0pKTsKCiAgICAgIHJldHVybiBmdW5jdGlvbiBoYW5kbGVMb2dpbigpIHsKICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpOwoKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGxvYWRpbmcsCiAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgaGFuZGxlTG9naW46IGhhbmRsZUxvZ2luLAogICAgICBlbWFpbFNlbnQ6IGVtYWlsU2VudAogICAgfTsKICB9Cn07"},{"version":3,"sources":["/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/Auth.vue"],"names":[],"mappings":";;AAgCA,SAAS,GAAT,QAAoB,KAApB;AACA,SAAS,QAAT,QAAyB,aAAzB;AAGA,eAAe;AAEX,EAAA,IAFW,kBAEJ;AACP,WAAO,EAAP;AAGD,GANY;AAOb,EAAA,KAPa,mBAOL;AACN,QAAM,OAAM,GAAI,GAAG,CAAC,KAAD,CAAnB;AACA,QAAM,KAAI,GAAI,GAAG,CAAC,EAAD,CAAjB;AACA,QAAM,SAAQ,GAAI,GAAG,CAAC,KAAD,CAArB;;AAEA,QAAM,WAAU;AAAA,yEAAI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB,gBAAA,OAAO,CAAC,KAAR,GAAgB,IAAhB;AACA,gBAAA,SAAS,CAAC,KAAV,GAAkB,KAAlB;AAHgB;AAAA,uBAIQ,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB;AAAE,kBAAA,KAAK,EAAE,KAAK,CAAC;AAAf,iBAArB,CAJR;;AAAA;AAAA;AAIR,gBAAA,KAJQ,yBAIR,KAJQ;;AAAA,qBAKZ,KALY;AAAA;AAAA;AAAA;;AAAA,sBAKC,KALD;;AAAA;AAMhB,gBAAA,SAAS,CAAC,KAAV,GAAkB,IAAlB;AANgB;AAAA;;AAAA;AAAA;AAAA;AAUhB,gBAAA,KAAK,CAAC,YAAM,iBAAN,IAA2B,YAAM,OAAlC,CAAL;;AAVgB;AAAA;AAYhB,gBAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AAZgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA,sBAAV,WAAU;AAAA;AAAA;AAAA,OAAhB;;AAgBA,WAAO;AACL,MAAA,OAAO,EAAP,OADK;AAEL,MAAA,KAAK,EAAL,KAFK;AAGL,MAAA,WAAW,EAAX,WAHK;AAIL,MAAA,SAAQ,EAAR;AAJK,KAAP;AAMD;AAlCY,CAAf","sourcesContent":["<template>\n  <form\n    class=\"d-flex justify-content-center mt-5 mx-3\"\n    @submit.prevent=\"handleLogin\"\n  >\n    <div class=\"mt-4\">\n      <h3 class=\"header text-dark\">Sign in to Add/Manage your listing</h3>\n      <p class=\"description text-secondary\">Sign in via magic link with your email below</p>\n      <p class=\"alert alert-success\" v-if=\"emailSent\"> \n        Magic link sent to your email successfully! <br>\n      Please check your email to login </p>\n      <div>\n        <input\n          class=\"form-control my-2\"\n          type=\"email\"\n          placeholder=\"Your email\"\n          v-model=\"email\"\n        />\n      </div>\n      <div>\n        <input\n          type=\"submit\"\n          class=\"btn action-btn float-end my-2\"\n          :value=\"loading ? 'Loading' : 'Send Magic link'\"\n          :disabled=\"loading\"\n        />\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { supabase } from \"../supabase\";\n\n\nexport default {\n\n    data() {\n    return {\n    \n    };\n  },\n  setup() {\n    const loading = ref(false);\n    const email = ref(\"\");\n    const emailSent = ref(false);\n\n    const handleLogin = async () => {\n      try {\n        loading.value = true;\n        emailSent.value = false;\n        const { error } = await supabase.auth.signIn({ email: email.value });\n        if (error) throw error;\n        emailSent.value = true;  \n        \n\n      } catch (error) {\n        alert(error.error_description || error.message);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    return {\n      loading,\n      email,\n      handleLogin,\n      emailSent\n    };\n  },\n};\n</script>\n\n<style scoped>\n.action-btn {\n  background-color: rgb(36, 180, 126);\n  color : #fff;\n}\n\n</style>"],"sourceRoot":""}]}
{"remainingRequest":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/PostLocation.vue?vue&type=style&index=0&id=e41363b6&scoped=true&lang=css","dependencies":[{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/PostLocation.vue","mtime":1633903654123},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1632349277000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dheeraj/Desktop/new-supa/supabase-geodb/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hY3Rpb24tYnRuIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzYsIDE4MCwgMTI2KTsKICBjb2xvciA6ICNmZmY7Cn0KCg=="},{"version":3,"sources":["/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/PostLocation.vue"],"names":[],"mappings":";AAoGA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACd","file":"/home/dheeraj/Desktop/new-supa/supabase-geodb/src/components/PostLocation.vue","sourceRoot":"","sourcesContent":["<template>\n<p class=\"alert alert-success\" v-if=\"successAlert\">\n  Added Listing successfully !\n</p>\n<p class=\"alert alert-warning\" v-if=\"errorAlert\">\n  Error Adding Listing ! Please try again. \n</p>\n  <div class=\"\">\n    <h3 class=\"text-dark mb-3\">Post Listing</h3>\n\n    <input class=\"form-control my-3\" v-model=\"name\" placeholder=\"Enter name\" />\n\n    <input\n      class=\"form-control my-3\"\n      v-model=\"loc_string\"\n      placeholder=\"Paste google maps url\"\n    />\n\n    <textarea\n      class=\"form-control my-3\"\n      v-model=\"description\"\n      placeholder=\"Description\"\n      rows=\"5\"\n    >\n    </textarea>\n\n    <div class=\"text-end\">\n      <button class=\"btn action-btn m-2 float-right\" @click=\"postListing\">\n        Add Listing\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { supabase } from \"../supabase\";\nimport { store } from \"../store\";\n\nexport default {\n  name: \"PostLocation\",\n  data() {\n    return {\n      name: \"\",\n      loc_string: \"\",\n      description: \"\",\n      successAlert : false, \n      errorAlert : false\n    };\n  },\n  methods: {\n    \n    async postListing() {\n\n      let coords = this.getLatLong(this.loc_string);\n      let d = new Date();\n\n      let inserObj = {\n        name: this.name,\n        location: \"SRID=4326;POINT(\" + coords.lat + \" \" + coords.long + \")\",\n        description: this.description,\n        tags: \"xyz abc\",\n        coords: JSON.stringify(coords),\n        created_at : d,\n        updated_at : d,\n        added_by : store.user.id\n      };\n\n      // console.log(data);\n      this.successAlert = false;\n\n      const { error } = await supabase\n        .from(\"all_locations\")\n        .insert([inserObj])\n        .single();\n\n      // console.log(data, error);\n      if(error) {\n        this.errorAlert = true;\n      } else {\n        this.successAlert = true;\n      }\n\n    },\n\n    getLatLong(str) {\n      \n      var patt1 = /[+-]?\\d+(\\.\\d+)?/g;\n      var result = str.match(patt1);\n      result = result.filter((item) => {\n        return item.length > 4 && item.includes(\".\");\n      });\n\n      return { lat: result[0], long: result[1] };\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n.action-btn {\n  background-color: rgb(36, 180, 126);\n  color : #fff;\n}\n\n</style>\n"]}]}